/*
 * This file is generated by jOOQ.
 */
package com.zhengqing.demo.dsl.jooq.tables.daos;


import com.zhengqing.demo.dsl.jooq.tables.TUser;
import com.zhengqing.demo.dsl.jooq.tables.records.TUserRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * 用户表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class TUserDao extends DAOImpl<TUserRecord, com.zhengqing.demo.dsl.jooq.tables.pojos.TUser, Integer> {

    /**
     * Create a new TUserDao without any configuration
     */
    public TUserDao() {
        super(TUser.T_USER, com.zhengqing.demo.dsl.jooq.tables.pojos.TUser.class);
    }

    /**
     * Create a new TUserDao with an attached configuration
     */
    @Autowired
    public TUserDao(Configuration configuration) {
        super(TUser.T_USER, com.zhengqing.demo.dsl.jooq.tables.pojos.TUser.class, configuration);
    }

    @Override
    public Integer getId(com.zhengqing.demo.dsl.jooq.tables.pojos.TUser object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.zhengqing.demo.dsl.jooq.tables.pojos.TUser> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(TUser.T_USER.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.zhengqing.demo.dsl.jooq.tables.pojos.TUser> fetchById(Integer... values) {
        return fetch(TUser.T_USER.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.zhengqing.demo.dsl.jooq.tables.pojos.TUser fetchOneById(Integer value) {
        return fetchOne(TUser.T_USER.ID, value);
    }

    /**
     * Fetch records that have <code>username BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.zhengqing.demo.dsl.jooq.tables.pojos.TUser> fetchRangeOfUsername(String lowerInclusive, String upperInclusive) {
        return fetchRange(TUser.T_USER.USERNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>username IN (values)</code>
     */
    public List<com.zhengqing.demo.dsl.jooq.tables.pojos.TUser> fetchByUsername(String... values) {
        return fetch(TUser.T_USER.USERNAME, values);
    }

    /**
     * Fetch records that have <code>nickname BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.zhengqing.demo.dsl.jooq.tables.pojos.TUser> fetchRangeOfNickname(String lowerInclusive, String upperInclusive) {
        return fetchRange(TUser.T_USER.NICKNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>nickname IN (values)</code>
     */
    public List<com.zhengqing.demo.dsl.jooq.tables.pojos.TUser> fetchByNickname(String... values) {
        return fetch(TUser.T_USER.NICKNAME, values);
    }
}
