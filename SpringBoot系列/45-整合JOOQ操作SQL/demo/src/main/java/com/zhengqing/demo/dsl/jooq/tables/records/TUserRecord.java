/*
 * This file is generated by jOOQ.
 */
package com.zhengqing.demo.dsl.jooq.tables.records;


import com.zhengqing.demo.dsl.jooq.tables.TUser;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 用户表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TUserRecord extends UpdatableRecordImpl<TUserRecord> implements Record3<Integer, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>jooq.t_user.id</code>. 主键ID
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>jooq.t_user.id</code>. 主键ID
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>jooq.t_user.username</code>. 账号
     */
    public void setUsername(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>jooq.t_user.username</code>. 账号
     */
    public String getUsername() {
        return (String) get(1);
    }

    /**
     * Setter for <code>jooq.t_user.nickname</code>. 昵称
     */
    public void setNickname(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>jooq.t_user.nickname</code>. 昵称
     */
    public String getNickname() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return TUser.T_USER.ID;
    }

    @Override
    public Field<String> field2() {
        return TUser.T_USER.USERNAME;
    }

    @Override
    public Field<String> field3() {
        return TUser.T_USER.NICKNAME;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getUsername();
    }

    @Override
    public String component3() {
        return getNickname();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getUsername();
    }

    @Override
    public String value3() {
        return getNickname();
    }

    @Override
    public TUserRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public TUserRecord value2(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public TUserRecord value3(String value) {
        setNickname(value);
        return this;
    }

    @Override
    public TUserRecord values(Integer value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TUserRecord
     */
    public TUserRecord() {
        super(TUser.T_USER);
    }

    /**
     * Create a detached, initialised TUserRecord
     */
    public TUserRecord(Integer id, String username, String nickname) {
        super(TUser.T_USER);

        setId(id);
        setUsername(username);
        setNickname(nickname);
    }
}
